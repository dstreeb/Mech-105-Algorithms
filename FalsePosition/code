function [root, fx, ea, iter] = falsePosition(func, xl, xu, es, maxit, varargin)
%falsePosition finds the root of a function using false position method
%After inputs are entered the check errors
 %es=input('Stopping percent ');
 %func=input('Input function in @(x) ');
 %xl=input('Input Left Guess ');
 %xu=input('Input Right Guess ');
if func(xl)*func(xu)>0
    error('root does not exist between these two point');
end
 if nargin<3
     error('Input more arguments');
 end
if nargin<4
    es=0.0001;
end
maxit=3; 

if ~isempty(varargin)
    f= @(x) func(x,varargin{:});
else
    f=@(x) func(x);
end

iter=0;
ea=100;
root=xl;
root_old=xl;
while iter<maxit
  
    root=(xu-((f(xu)*(xl-xu))/(f(xl)-f(xu))));
    ea=abs((root-root_old)/root)*100;
    root_old=root;
  xl=root;
   
  if ea<=es
      break
  end
  iter=iter+1;
end

fx=f(root);

end
